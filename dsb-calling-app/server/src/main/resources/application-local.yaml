app:
  networkPSTN: &netsp "net_sp"
  networkB2B: &netb2b "net_antares"
  networkCallingCore: &netcc "net_cc"
  b2b-egress: "Antares"
  calling-egress: "NS"
  pstn-ingress: "CcpFusionUS"

  maintenance:
    enabled: false
    description: "DSB is in maintenance"
    responseCode: 503
  errorMappingPolicy:
    antaresErrorPolicy:
      name: &antaresErrorPolicy antaresErrorPolicy
      mappings:
        - mappedResponseCode: 502
          mappedResponsePhrase: "Something went bad, irrecoverable"
          errorCodes:
            -  503
            -  408
  callTypes:
    dialInPSTN:
      name: dialInPSTN
      errorMappingPolicy: *antaresErrorPolicy

  rateLimitPolicy:
    - name: &rateLimitPolicyPstn "rateLimitPolicyPstn"
      allowList: ['10.78.98.54', '2.2.2.2']
      type: network
      rateLimit:
        permits: 1000
        interval: 60s
    - name: &rateLimitPolicyGlobal "rateLimitPolicyGlobal"
      allowList: ["3.3.3.3"]
      denyList: ["4.4.4.4"]
      autoBuild: true
      type: global
      rateLimit:
        permits: 1000
        interval: 60s

  rateLimiter:
    rateLimitPolicyPstn:
      policyName: *rateLimitPolicyPstn
      networks: [*netsp]

common:
  listenPoints:
    - name: *netsp
      port: 5060
      transport: UDP
      hostIPAddress: "127.0.0.1"
      enableRateLimiter: true
    - name: *netb2b
      port: 5070
      transport: UDP

      hostIPAddress: "127.0.0.1"
    - name: *netcc
      port: 5080
      transport: UDP
      hostIPAddress: "127.0.0.1"
  serverGroups:
    UsPoolA:
      name: &UsPoolA UsPoolA
      hostName: "UsPoolA"
      networkName: *netsp
      lbType: weight
      elements:
        - ipAddress: "127.0.0.1"
          port: 6060
          priority: 10
          weight: 100
        - ipAddress: "127.0.0.1"
          port: 6061
          priority: 5
          weight: 100
      routePolicy: policy1
      optionsPingPolicy: opPolicy1
    UsPoolB:
      name: &UsPoolB UsPoolB
      hostName: "UsPoolB"
      networkName: *netsp
      lbType: weight
      elements:
        - ipAddress: "127.0.0.1"
          port: 6062
          priority: 10
          weight: 100
      routePolicy: policy1
      optionsPingPolicy: opPolicy1
    InPoolA:
      name: &InPoolA InPoolA
      hostName: "InPoolA"
      networkName: *netsp
      lbType: weight
      elements:
        - ipAddress: "127.0.0.1"
          port: 6062
          priority: 10
          weight: 100
      routePolicy: policy1
      optionsPingPolicy: opPolicy1
    Antares:
      name: &Antares Antares
      hostName: "test.beech.com"
      networkName: *netb2b
      lbType: weight
      routePolicy: policy1
      sgType: A_RECORD
      port: 7060
      optionsPingPolicy: opPolicy1
    NS1:
      name: &NS1 NS1
      hostName: "ns1.cc.com"
      networkName: *netcc
      lbType: weight
      routePolicy: policy1
      optionsPingPolicy: opPolicy1
      sgType: A_RECORD
      port: 8060
    NS2:
      name: &NS2 NS2
      hostName: "ns2.cc.com"
      networkName: *netcc
      lbType: weight
      routePolicy: policy1
      optionsPingPolicy: opPolicy1
      sgType: A_RECORD
      port: 8060
  routePolicy:
    policy1:
      name: policy1
      failoverResponseCodes:
        - 501
        - 502
      circuitBreakConfig:
        waitDurationInOpenState: 10
        slidingWindowSize: 2
        failureThresholdRate: 50
        permittedNumberOfCallsInHAlfOpenState: 1
        slidingWindowType: COUNT_BASED
  optionsPingPolicy:
    opPolicy1:
      name: opPolicy1
      failureResponseCodes:
        - 501
        - 502
        - 503
      upTimeInterval: 30000
      downTimeInterval: 8000
      pingTimeOut: 5000
      maxForwards: 50


trunk:
  PSTN:
    CcpFusionUS:
      enableCircuitBreaker: true
      name: CcpFusionUS
      ingress:
        name: ingress1
      egress:
        selector:
          dtg: CcpFusionUS
        routePolicy: policy1
        lbType: weight
        serverGroups:
          - sg: *UsPoolA
            priority: 10
            weight: 100
          - sg: *UsPoolB
            priority: 20
            weight: 100
    CcpFusionIN:
      name: CcpFusionIN
      enableCircuitBreaker: true
      ingress:
        name: ingress1
      egress:
        selector:
          dtg: CcpFusionIN
        routePolicy: policy1
        lbType: weight
        serverGroups:
          - sg: *InPoolA
            priority: 10
            weight: 100
  B2B:
    Antares:
      name: Antares
      enableCircuitBreaker: true
      ingress:
        name: antares_ig
      egress:
        routePolicy: policy1
        lbType: ONCE
        serverGroups:
          - sg: *Antares
            priority: 10
            weight: 100
  CallingCore:
    NS:
      name: NS
      ingress:
        name: ns_ig
      egress:
        routePolicy: policy1
        lbType: ONCE
        serverGroups:
          - sg: *NS1
            priority: 10
            weight: 100
          - sg: *NS2
            priority: 10
            weight: 100