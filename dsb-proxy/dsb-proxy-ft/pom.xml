<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>dsb-proxy</artifactId>
    <groupId>com.cisco</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>dsb-proxy-ft</artifactId>
  <packaging>jar</packaging>

  <dependencies>
    <dependency>
      <groupId>com.cisco</groupId>
      <artifactId>dsb-proxy-app-sample</artifactId>
      <version>1.0-SNAPSHOT</version>
      <type>war</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
    </dependency>
    <dependency>
      <groupId>com.cisco.wx2</groupId>
      <artifactId>core-test</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.sip</groupId>
      <artifactId>jain-sip-ri</artifactId>
      <version>1.3.0-91</version>
    </dependency>
    <dependency>
      <groupId>org.mobicents.sipunit</groupId>
      <artifactId>sipunit</artifactId>
      <version>2.0.5</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1.1</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.cisco</groupId>
      <artifactId>dsb-test-framework</artifactId>
      <version>1.0-SNAPSHOT</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <properties>
    <tomcat.server.port>9221</tomcat.server.port>
    <tomcat.ajp.port>9222</tomcat.ajp.port>
    <tomcat.rmi.port>9223</tomcat.rmi.port>
    <sonar.coverage.jacoco.xmlReportPaths>target/site/jacoco-aggregate/jacoco.xml,target/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    <sonar.skip>true</sonar.skip>
  </properties>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <!-- failsafe plugin runs integration tests in the 'integration-test' phase -->
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <transportType>UDP</transportType>
              </systemPropertyVariables>
              <summaryFile>target/failsafe-reports/failsafe-summary-udp.xml</summaryFile>
            </configuration>
          </execution>
          <execution>
            <id>integration-tests-tcp</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <transportType>TCP</transportType>
              </systemPropertyVariables>
              <summaryFile>target/failsafe-reports/failsafe-summary-tcp.xml</summaryFile>
            </configuration>
          </execution>
          <execution>
            <id>integration-tests-tls</id>
            <goals>
              <goal>integration-test</goal>
            </goals>
            <configuration>
              <systemPropertyVariables>
                <transportType>TLS</transportType>
              </systemPropertyVariables>
              <summaryFile>target/failsafe-reports/failsafe-summary-tls.xml</summaryFile>
            </configuration>
          </execution>
          <execution>
            <id>verify</id>
            <goals>
              <goal>verify</goal>
            </goals>
            <configuration>
              <summaryFiles>
                <summaryFile>target/failsafe-reports/failsafe-summary-udp.xml</summaryFile>
                <summaryFile>target/failsafe-reports/failsafe-summary-tcp.xml</summaryFile>
                <summaryFile>target/failsafe-reports/failsafe-summary-tls.xml</summaryFile>
              </summaryFiles>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <argLine>-XX:+AllowRedefinitionToAddDeleteMethods</argLine>
          <skipITs>${skipFTs}</skipITs>
          <testClassesDirectory>${project.build.outputDirectory}</testClassesDirectory>
          <testSourceDirectory>${project.build.sourceDirectory}</testSourceDirectory>
          <environmentVariables>
            <dhruvaHost>127.0.0.1</dhruvaHost>
            <testHost>127.0.0.1</testHost>
            <dhruvaSipTcpPort>5060</dhruvaSipTcpPort>
          </environmentVariables>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>${cargo.maven2.plugin.version}</version>
        <executions>
          <execution>
            <id>start-udp-container</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <skip>${skipFTs}</skip>
              <container>
                <containerId>tomcat9x</containerId>
                <artifactInstaller>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>${tomcat-ft.version}</version>
                </artifactInstaller>
                <systemProperties>
                  <!-- The following properties are required to disable the creation of redis cache (which is not needed for IT execution)
                  i.e if we dont have a redis instance running, the app startup will fail -->
                  <enableLettuceRedisDataSourceForUserToGroups>false</enableLettuceRedisDataSourceForUserToGroups>
                  <enableLettuceRedisDataSourceForUserCache>false</enableLettuceRedisDataSourceForUserCache>
                  <enableLettuceRedisDataSourceForOrgCache>false</enableLettuceRedisDataSourceForOrgCache>
                  <enableLettuceRedisDataSourceForAuthCache>false</enableLettuceRedisDataSourceForAuthCache>
                  <spring.profiles.active>udp</spring.profiles.active>
                </systemProperties>
                <timeout>300000</timeout>
              </container>
              <configuration>
                <type>standalone</type>
                <properties>
                  <cargo.servlet.port>${tomcat.server.port}</cargo.servlet.port>
                  <cargo.rmi.port>${tomcat.rmi.port}</cargo.rmi.port>
                  <cargo.tomcat.ajp.port>${tomcat.ajp.port}</cargo.tomcat.ajp.port>
                  <cargo.jvmargs>${itArgLine}</cargo.jvmargs>
                </properties>
                <home>${project.build.directory}/tomcat_udp_app</home>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>com.cisco</groupId>
                  <artifactId>dsb-proxy-app-sample</artifactId>
                  <type>war</type>
                  <properties>
                    <context>/</context>
                  </properties>
                  <pingUrlPath>/ping</pingUrlPath>
                </deployable>
              </deployables>
            </configuration>
          </execution>

          <execution>
            <id>stop-udp-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <skip>${skipFTs}</skip>
              <container>
                <containerId>tomcat9x</containerId>
                <timeout>300000</timeout>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>${tomcat.server.port}</cargo.servlet.port>
                </properties>
                <home>${project.build.directory}/tomcat_udp_app</home>
              </configuration>
            </configuration>
          </execution>

          <execution>
            <id>start-tcp-container</id>
            <phase>package</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <skip>${skipFTs}</skip>
              <container>
                <containerId>tomcat9x</containerId>
                <artifactInstaller>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>${tomcat-ft.version}</version>
                </artifactInstaller>
                <systemProperties>
                  <!-- The following properties are required to disable the creation of redis cache (which is not needed for IT execution)
                  i.e if we dont have a redis instance running, the app startup will fail -->
                  <enableLettuceRedisDataSourceForUserToGroups>false</enableLettuceRedisDataSourceForUserToGroups>
                  <enableLettuceRedisDataSourceForUserCache>false</enableLettuceRedisDataSourceForUserCache>
                  <enableLettuceRedisDataSourceForOrgCache>false</enableLettuceRedisDataSourceForOrgCache>
                  <enableLettuceRedisDataSourceForAuthCache>false</enableLettuceRedisDataSourceForAuthCache>
                  <spring.profiles.active>tcp</spring.profiles.active>
                </systemProperties>
                <timeout>300000</timeout>
              </container>
              <configuration>
                <type>standalone</type>
                <properties>
                  <cargo.servlet.port>8221</cargo.servlet.port>
                  <cargo.rmi.port>8223</cargo.rmi.port>
                  <cargo.tomcat.ajp.port>8222</cargo.tomcat.ajp.port>
                  <cargo.jvmargs>${itArgLine}</cargo.jvmargs>
                </properties>
                <home>${project.build.directory}/tomcat_tcp_app</home>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>com.cisco</groupId>
                  <artifactId>dsb-proxy-app-sample</artifactId>
                  <type>war</type>
                  <properties>
                    <context>/</context>
                  </properties>
                  <pingUrlPath>/ping</pingUrlPath>
                </deployable>
              </deployables>
            </configuration>
          </execution>

          <execution>
            <id>stop-tcp-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <skip>${skipFTs}</skip>
              <container>
                <containerId>tomcat9x</containerId>
                <timeout>300000</timeout>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>8221</cargo.servlet.port>
                </properties>
                <home>${project.build.directory}/tomcat_tcp_app</home>
              </configuration>
            </configuration>
          </execution>

          <execution>
            <id>start-tls-container</id>
            <phase>package</phase>
            <goals>
              <goal>start</goal>
            </goals>
            <configuration>
              <skip>${skipFTs}</skip>
              <container>
                <containerId>tomcat9x</containerId>
                <artifactInstaller>
                  <groupId>org.apache.tomcat</groupId>
                  <artifactId>tomcat</artifactId>
                  <version>${tomcat-ft.version}</version>
                </artifactInstaller>
                <systemProperties>
                  <!-- The following properties are required to disable the creation of redis cache (which is not needed for IT execution)
                  i.e if we dont have a redis instance running, the app startup will fail -->
                  <enableLettuceRedisDataSourceForUserToGroups>false</enableLettuceRedisDataSourceForUserToGroups>
                  <enableLettuceRedisDataSourceForUserCache>false</enableLettuceRedisDataSourceForUserCache>
                  <enableLettuceRedisDataSourceForOrgCache>false</enableLettuceRedisDataSourceForOrgCache>
                  <enableLettuceRedisDataSourceForAuthCache>false</enableLettuceRedisDataSourceForAuthCache>
                  <spring.profiles.active>tls</spring.profiles.active>
                </systemProperties>
                <timeout>300000</timeout>
              </container>
              <configuration>
                <type>standalone</type>
                <properties>
                  <cargo.servlet.port>7221</cargo.servlet.port>
                  <cargo.rmi.port>7223</cargo.rmi.port>
                  <cargo.tomcat.ajp.port>7222</cargo.tomcat.ajp.port>
                  <cargo.jvmargs>${itArgLine}</cargo.jvmargs>
                </properties>
                <home>${project.build.directory}/tomcat_tls_app</home>
              </configuration>
              <deployables>
                <deployable>
                  <groupId>com.cisco</groupId>
                  <artifactId>dsb-proxy-app-sample</artifactId>
                  <type>war</type>
                  <properties>
                    <context>/</context>
                  </properties>
                  <pingUrlPath>/ping</pingUrlPath>
                </deployable>
              </deployables>
            </configuration>
          </execution>

          <execution>
            <id>stop-tls-container</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
            <configuration>
              <skip>${skipFTs}</skip>
              <container>
                <containerId>tomcat9x</containerId>
                <timeout>300000</timeout>
              </container>
              <configuration>
                <properties>
                  <cargo.servlet.port>7221</cargo.servlet.port>
                </properties>
                <home>${project.build.directory}/tomcat_tls_app</home>
              </configuration>
            </configuration>
          </execution>

        </executions>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco.version}</version>
        <executions>
          <execution>
            <id>report</id>
            <goals>
              <goal>report-aggregate</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>